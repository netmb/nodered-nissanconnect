[{"id":"384815d.e67a5ea","type":"subflow","name":"NissanConnect-Session","info":"This subflow authenticates against NissanConnect-Services and returns a session-Object (mainly the required Bearer-token)\n\n### Inputs\nThis subflow requires a config-Object as msg.payload\n\n### Outputs\nThe message.payload contains the session-object.\n\n","category":"","in":[{"x":80,"y":80,"wires":[{"id":"cb8886d8.bff518"}]}],"out":[{"x":460,"y":260,"wires":[{"id":"642b857c.eb3744","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"cb8886d8.bff518","type":"function","z":"384815d.e67a5ea","name":"","func":"var conf = msg.payload;\nflow.set('conf', conf);\nmsg = {\n    'method' : 'POST',\n    'url' : conf.auth_base_url + \"json/realms/root/realms/\" + conf.realm + '/authenticate',\n    'headers' : {\n        'Accept-Api-Version': conf.api_version,\n          'X-Username': 'anonymous',\n          'X-Password': 'anonymous',\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":80,"wires":[["ace991eb.89ec3"]]},{"id":"ace991eb.89ec3","type":"http request","z":"384815d.e67a5ea","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":530,"y":80,"wires":[["949cafdd.bf1a8"]]},{"id":"949cafdd.bf1a8","type":"function","z":"384815d.e67a5ea","name":"store Authid & prepare Request","func":"var authId = msg.payload.authId;\nflow.set('authId', authId);\nvar conf = flow.get('conf');\nmsg = {\n    'method' : 'POST',\n    'url' : conf.auth_base_url + \"json/realms/root/realms/\" + conf.realm + '/authenticate',\n    'headers' : {\n        'Accept-Api-Version': conf.api_version,\n          'X-Username': 'anonymous',\n          'X-Password': 'anonymous',\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n    }\n}\nmsg.payload = {\n  'authId': authId,\n  'template': '',\n  'stage': 'LDAP1',\n  'header': 'Sign in',\n  'callbacks': [\n    {\n      'type': 'NameCallback',\n      'output': [{'name': 'prompt', 'value': 'User Name:'}],\n      'input': [{'name': 'IDToken1', 'value': conf.username}]\n    },\n    {\n      'type': 'PasswordCallback',\n      'output': [{'name': 'prompt', 'value': 'Password:'}],\n      'input': [{'name': 'IDToken2', 'value': conf.password}]\n    }\n  ]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":790,"y":80,"wires":[["bd97e348.3a94c8"]]},{"id":"bd97e348.3a94c8","type":"http request","z":"384815d.e67a5ea","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":150,"y":140,"wires":[["59be2621.6f8fb8"]]},{"id":"59be2621.6f8fb8","type":"function","z":"384815d.e67a5ea","name":"","func":"var conf = flow.get('conf');\nvar authCookie = msg.payload.tokenId;\nvar realm = msg.payload.realm;\nflow.set('realm', realm);\nmsg = {\n    method: 'GET',\n    url: conf.auth_base_url + \"oauth2\" + realm  + \"/authorize?client_id=\" + conf.client_id + \"&redirect_uri=\" + conf.redirect_uri + \"&response_type=code&scope=\" + conf.scope + \"&nonce=sdfdsfez\",\n    headers : {\n        'Cookie': 'i18next=en-UK; amlbcookie=05; kauthSession=\"' + authCookie + '\"'\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":140,"wires":[["87a038b6.c29428"]]},{"id":"87a038b6.c29428","type":"http request","z":"384815d.e67a5ea","name":"generates Error","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":520,"y":140,"wires":[["1d74f4ad.3d0deb"]]},{"id":"1d74f4ad.3d0deb","type":"function","z":"384815d.e67a5ea","name":"","func":"var resp = msg.payload;\nvar code = resp.split('=')[1].split('&')[0];\nvar conf = flow.get('conf');\nvar realm = flow.get('realm');\nmsg = {\n    'method' : 'POST',\n    'url' : conf.auth_base_url + 'oauth2' + realm + '/access_token?code=' + code + '&client_id=' + conf.client_id + '&client_secret=' + conf.client_secret + '&redirect_uri=' + conf.redirect_uri + '&grant_type=authorization_code',\n    'headers' : {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":720,"y":140,"wires":[["73a616e0.6e7808"]]},{"id":"73a616e0.6e7808","type":"http request","z":"384815d.e67a5ea","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":150,"y":200,"wires":[["200d8a9a.ac087e"]]},{"id":"200d8a9a.ac087e","type":"function","z":"384815d.e67a5ea","name":"","func":"var bearerToken = msg.payload.access_token;\nflow.set('bearerToken', bearerToken);\nvar conf = flow.get('conf');\nmsg = {\n    'method': 'GET',\n    'url': conf.user_adapter_base_url + 'v1/users/current',\n    'headers': {\n        'Authorization' : 'Bearer ' +  bearerToken\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":200,"wires":[["fcbed5b1.53d188"]]},{"id":"fcbed5b1.53d188","type":"http request","z":"384815d.e67a5ea","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":530,"y":200,"wires":[["bd6d8c81.f6fc78"]]},{"id":"bd6d8c81.f6fc78","type":"function","z":"384815d.e67a5ea","name":"","func":"var userId = msg.payload.userId;\nflow.set('userId', userId);\nvar conf = flow.get('conf');\nvar bearerToken = flow.get('bearerToken');\nmsg = {\n    'method': 'GET',\n    'url': conf.user_base_url + 'v2/users/' + userId + '/cars',\n    'headers': {\n        'Authorization' : 'Bearer ' +  bearerToken\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":720,"y":200,"wires":[["8df23594.d09188"]]},{"id":"8df23594.d09188","type":"http request","z":"384815d.e67a5ea","name":"","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":150,"y":260,"wires":[["642b857c.eb3744"]]},{"id":"642b857c.eb3744","type":"function","z":"384815d.e67a5ea","name":"","func":"var cars = msg.payload.data;\nvar session = {\n    'bearerToken': flow.get('bearerToken'),\n    'userId' : flow.get('userId')\n}\nif (cars.length == 0 ) {\n    node.warn('No cars found!');\n    session.vehicle = null;\n}\nelse {\n    session.vehicle = cars[0];\n    node.warn('NissanConnect found car. Login complete');\n}\nmsg.payload = session;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":260,"wires":[[]]},{"id":"ffc4ee4.e538e9","type":"catch","z":"384815d.e67a5ea","name":"","scope":["87a038b6.c29428"],"uncaught":false,"x":120,"y":320,"wires":[["e2408be5.401b48"]]},{"id":"e2408be5.401b48","type":"debug","z":"384815d.e67a5ea","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":270,"y":320,"wires":[]}]
